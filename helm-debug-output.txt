---
# Source: crawl2insight-app/charts/backend-chart/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fastapi-backend-ksa
  annotations:
    iam.gke.io/gcp-service-account: fastapi-app-sa-crawl2insight@alpine-figure-461007-i9.iam.gserviceaccount.com
  labels:
    helm.sh/chart: backend-chart-0.1.0
    app.kubernetes.io/name: backend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: crawl2insight-app/charts/backend-chart/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  # Tên secret sẽ được lấy từ values.yaml
  name: db-credentials
type: Opaque
stringData:
  # Key 'database-url' phải khớp với key trong deployment
  # Giá trị được lấy từ file values.yaml
  database-url: postgresql+psycopg2://postgres:123456@127.0.0.1:5432/job_db
---
# Source: crawl2insight-app/charts/frontend-chart/templates/configmap-nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-services-frontend-chart-nginx-config
  labels:
    helm.sh/chart: frontend-chart-0.1.0
    app.kubernetes.io/name: frontend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        # React SPA entry point
        location / {
            try_files $uri /index.html;
        }

        # Phục vụ static assets build ra
        location /assets/ {
            try_files $uri =404;
        }

        # (Optional) các file favicon, vite.svg,...
        location ~* \.(svg|ico|png|woff2?)$ {
            try_files $uri =404;
        }

        # Forward API request tới backend
        location /api/ {
            proxy_pass http://backend-service:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
# Source: crawl2insight-app/charts/backend-chart/templates/service.yaml
# templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    helm.sh/chart: backend-chart-0.1.0
    app.kubernetes.io/name: backend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: backend-chart
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
      
    # ==========================================================
    # PHẦN SỬA LỖI: Dùng `and` để kiểm tra cả hai điều kiện
    # ==========================================================
    - name: http-metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
    # ==========================================================
      
  selector:
    app.kubernetes.io/name: backend-chart
    app.kubernetes.io/instance: app-services
---
# Source: crawl2insight-app/charts/frontend-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: app-services-frontend-chart
  labels:
    helm.sh/chart: frontend-chart-0.1.0
    app.kubernetes.io/name: frontend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      apiVersion: v1
kind: Service
metadata:
  name: app-services-frontend-chart
  labels:
    helm.sh/chart: frontend-chart-0.1.0
    app.kubernetes.io/name: frontend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: http
  selector:
    app.kubernetes.io/name: frontend-chart
    app.kubernetes.io/instance: app-services

  selector:
    app.kubernetes.io/name: frontend-chart
    app.kubernetes.io/instance: app-services
---
# Source: crawl2insight-app/charts/backend-chart/templates/deployment.yaml
# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  # Tên deployment sẽ được tạo tự động và chuẩn hóa bởi Helm
  name: backend-service
  labels:
    helm.sh/chart: backend-chart-0.1.0
    app.kubernetes.io/name: backend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backend-chart
      app.kubernetes.io/instance: app-services
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend-chart
        app.kubernetes.io/instance: app-services
    spec:
      # Sử dụng Service Account được định nghĩa trong values.yaml
      serviceAccountName: fastapi-backend-ksa
      containers:
        - name: fastapi-backend-container
          image: "asia-southeast1-docker.pkg.dev/alpine-figure-461007-i9/crawl2insight-repo/backend:1234b"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
          
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: database-url
          resources:
            {}

        # Container sidecar cho Cloud SQL Proxy, chỉ được tạo nếu 'cloudsql.enabled' là true
        - name: cloud-sql-proxy
          image: "gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.10.0"
          args:
            - "--structured-logs"
            - "--port=5432"
            - "alpine-figure-461007-i9:asia-southeast1:job-pipeline-db"
          securityContext:
            runAsNonRoot: true
---
# Source: crawl2insight-app/charts/frontend-chart/templates/deployment.yaml
# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  # Tên deployment sẽ được tạo tự động và chuẩn hóa bởi Helm
  name: app-services-frontend-chart
  labels:
    helm.sh/chart: frontend-chart-0.1.0
    app.kubernetes.io/name: frontend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend-chart
      app.kubernetes.io/instance: app-services
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend-chart
        app.kubernetes.io/instance: app-services
      annotations:
        checksum/config: 75fb549774d5adc1ade03ce11e7e7182f6fe705e77783140c172011f3f2d988f
    spec:
      containers:
        - name: react-frontend-container
          image: "asia-southeast1-docker.pkg.dev/alpine-figure-461007-i9/crawl2insight-repo/frontend:g-d5b80f5"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config-volume # Tên phải khớp với `volumes.name` ở dưới
              mountPath: /etc/nginx/conf.d/default.conf # Đường dẫn ghi đè config NGINX
              subPath: default.conf # Tên key trong ConfigMap
              readOnly: true

          readinessProbe:
            httpGet:
              path: / # Hoặc một endpoint sức khỏe cụ thể như /healthz
              port: 80
            initialDelaySeconds: 15
            # Tăng thời gian chờ phản hồi từ 1 giây (mặc định) lên 5 giây
            timeoutSeconds: 5
            # Giữ nguyên hoặc tăng nhẹ chu kỳ kiểm tra
            periodSeconds: 10
            # Số lần thất bại trước khi Pod bị đánh dấu là Unready
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: nginx-config-volume
          configMap:
            name: app-services-frontend-chart-nginx-config
---
# Source: crawl2insight-app/charts/frontend-chart/templates/ingressclass.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: gce
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: k8s.io/ingress-gce
---
# Source: crawl2insight-app/charts/frontend-chart/templates/ingress.yaml
# templates/ingress.yaml (Phiên bản đã sửa lỗi và tối ưu)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-services-frontend-chart
  labels:
    helm.sh/chart: frontend-chart-0.1.0
    app.kubernetes.io/name: frontend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  # SỬA LỖI 1: Tách riêng khối annotations.
  # Chỉ render block "annotations" nếu nó thực sự được định nghĩa trong values.yaml.
  annotations:
    # Dùng toYaml để render tất cả các key-value trong map annotations.
    # Cách này linh hoạt, cho phép người dùng thêm bất kỳ annotation nào họ muốn.
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: joblytics-static-ip
spec:
  # CẢI THIỆN: Sử dụng trường ingressClassName theo chuẩn mới.
  ingressClassName: gce
  rules:
    - host: "joblytics.io.vn"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app-services-frontend-chart
                port:
                  # Port name phải khớp với name trong service.yaml (là 'http')
                  name: http
          - path: /assets/
            pathType: Prefix
            backend:
              service:
                name: app-services-frontend-chart
                port:
                  # Port name phải khớp với name trong service.yaml (là 'http')
                  name: http
          - path: /vite.svg
            pathType: Prefix
            backend:
              service:
                name: app-services-frontend-chart
                port:
                  # Port name phải khớp với name trong service.yaml (là 'http')
                  name: http
          - path: /api/
            pathType: Prefix
            backend:
              service:
                name: app-services-frontend-chart
                port:
                  # Port name phải khớp với name trong service.yaml (là 'http')
                  name: http
---
# Source: crawl2insight-app/charts/backend-chart/templates/servicemonitor.yaml
# templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: backend-service
  namespace: application
  labels:
    release: prometheus-stack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: backend-chart
      app.kubernetes.io/instance: app-services
  
  namespaceSelector:
    matchNames:
      - application
      
  endpoints:
  - port: http-metrics
    interval: 30s
    path: /metrics
---
# Source: crawl2insight-app/charts/backend-chart/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "backend-service-test-connection"
  labels:
    helm.sh/chart: backend-chart-0.1.0
    app.kubernetes.io/name: backend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['backend-service:80']
  restartPolicy: Never
---
# Source: crawl2insight-app/charts/frontend-chart/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "app-services-frontend-chart-test-connection"
  labels:
    helm.sh/chart: frontend-chart-0.1.0
    app.kubernetes.io/name: frontend-chart
    app.kubernetes.io/instance: app-services
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['app-services-frontend-chart:80']
  restartPolicy: Never

