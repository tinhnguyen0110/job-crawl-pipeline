apiVersion: v1
kind: ConfigMap
metadata:
  name: cmp-helmfile-plugin
  namespace: argocd
data:
  # plugin.yaml: |
  #   apiVersion: argoproj.io/v1alpha1
  #   kind: ConfigManagementPlugin
  #   metadata:
  #     name: helmfile
  #   spec:
  #     discover:
  #       find: 
  #         command: ["sh", "-c", "echo '[🔍] Discovering helmfile...'; find . -maxdepth 2 -name 'helmfile.yaml'"]
  #     init:
  #       command: ["helmfile", "repos"]
  #     generate:
  #       #command: ["helmfile", "template", "--include-crds"]
  #       command: ["sh", "-c", "helmfile -e development -l app=$ARGOCD_APP_NAME template --include-crds"]
  # plugin.yaml: |
  #   apiVersion: argoproj.io/v1alpha1
  #   kind: ConfigManagementPlugin
  #   metadata:
  #     name: helmfile
  #   spec:
  #     init:
  #       command: ["helmfile", "repos"]
      
  #     generate:
  #       command: ["sh", "-c"]
  #       args:
  #         - |
  #           # SỬA LỖI Ở ĐÂY: Chuyển hướng tất cả các dòng echo sang stderr bằng `>&2`
  #           echo "--- Processing Application: $ARGOCD_APP_NAME ---" >&2
            
  #           if [ -f "Chart.yaml" ]; then
  #             echo "==> Detected standard Helm chart. Using 'helm template'..." >&2
  #             # Lệnh helm template vẫn in YAML ra stdout như bình thường
  #             helm template .
  #           else
  #             echo "==> Helmfile project detected. Using 'helmfile template' with selector: app=$ARGOCD_APP_NAME" >&2
  #             # Lệnh helmfile template vẫn in YAML ra stdout như bình thường
  #             helmfile -e development -l app=$ARGOCD_APP_NAME template --include-crds
  #           fi
  #           echo "--- Finished processing Application: $ARGOCD_APP_NAME ---" >&2
  plugin.yaml: |
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      # Tên duy nhất của plugin
      name: helmfile
    spec:
      init:
        command: ["sh", "-c"]
        args:
          - |
            echo "===== [INIT] Start Debugging =====" >&2
            echo "App Name: $ARGOCD_APP_NAME" >&2
            echo "Listing files (ls -la):" >&2
            echo "Searching for helmfile.yaml:" >&2
            find . -name "helmfile.yaml" >&2
            echo "Searching for Chart.yaml:" >&2
            find . -name "Chart.yaml" >&2
            echo "===== [INIT] End Debugging =====" >&2
            if [ -f "helmfile.yaml" ]; then
              helmfile repos
            fi
      generate:
        command: ["sh", "-c"]
        args:
          - |
            if [ -f "Chart.yaml" ]; then
              helm template .
            elif [ -f "helmfile.yaml" ]; then
              helmfile -l app=$ARGOCD_APP_NAME template --include-crds
            else
              echo "[ERROR] No Chart.yaml or helmfile.yaml found!" >&2
              exit 1
            fi
            echo "===========================================" >&2
